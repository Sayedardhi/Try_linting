{
    "C0304 - Final newline missing": {
        "diff": "--- \n+++ \n@@ -1 +1,9 @@\n-    main()\n+\"\"\"\n+main.py\n+\"\"\"\n+\n+def main():\n+    \"\"\"\n+    This is the main function.\n+    \"\"\"\n+    pass",
        "start_line": 113,
        "end_line": null
    },
    "C0103 - Module name \"C0304-final-newline-missing\" doesn't conform to snake_case naming style": {
        "diff": "--- \n+++ \n@@ -1,10 +1,6 @@\n-#!/usr/bin/env python3\n-\n \"\"\"\n Stanford Bluescreen Example\n Shows front and back strategies.\n-The functions are mostly complete,\n-missing only the key if-logic line.\n \"\"\"\n \n import sys\n@@ -15,6 +11,7 @@\n     \"\"\"\n     A wrapper class for PIL Image to facilitate pixel manipulation.\n     \"\"\"\n+\n     def __init__(self, filename):\n         \"\"\"\n         Initialize the SimpleImage with a given filename.\n@@ -83,31 +80,4 @@\n                 dest_x = x + shift_x\n                 dest_y = y + shift_y\n                 if back.in_bounds(dest_x, dest_y):\n-                    back.set_pixel(dest_x, dest_y, pixel)\n-\n-\n-def main():\n-    \"\"\"\n-    Main function to handle argument parsing and strategy execution.\n-    \"\"\"\n-    args = sys.argv[1:]\n-\n-    if len(args) != 2 and len(args) != 4:\n-        print('Args not recognized. Usage:')\n-        print('2 args for front strategy:')\n-        print('  front-image back-image')\n-        print('4 args for back strategy:')\n-        print('  front-image shift-x shift-y back-image')\n-        return\n-\n-    if len(args) == 2:\n-        image = do_front(args[0], args[1])\n-        image.show()\n-\n-    if len(args) == 4:\n-        image = do_back(args[0], int(args[1]), int(args[2]), args[3])\n-        image.show()\n-\n-\n-if __name__ == '__main__':\n-    main()\n+                    back.set_pixel(dest_x,",
        "start_line": 1,
        "end_line": null
    },
    "E1111 - Assigning result of a function call, where the function has no return": {
        "diff": "--- \n+++ \n@@ -1 +1,17 @@\n-        image = do_back(args[0], int(args[1]), int(args[2]), args[3])\n+```python\n+\"\"\"Module docstring\"\"\"\n+\n+def do_back(image, width, height, channels):\n+    \"\"\"\n+    This function does something.\n+\n+    Args:\n+        image: The image to process.\n+        width: The width of the resulting image.\n+        height: The height of the resulting image.\n+        channels: The number of channels in the resulting image.\n+\n+    Returns:\n+        The processed image.\n+    \"\"\"\n+    return do_back(image, width, height, channels)",
        "start_line": 108,
        "end_line": 108
    }
}