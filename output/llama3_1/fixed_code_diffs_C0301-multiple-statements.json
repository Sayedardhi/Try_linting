{
    "C0304 - Final newline missing": {
        "diff": "--- \n+++ \n@@ -1 +1,10 @@\n-    main()\n+\"\"\"\n+This module contains the main function that is called when running the script.\n+\"\"\"\n+\n+def main():\n+    \"\"\"\n+    This is the entry point of the program.\n+    It is responsible for executing all other functions in a sequence.\n+    \"\"\"\n+    # Code to be executed here...",
        "start_line": 116,
        "end_line": null
    },
    "C0103 - Module name \"C0301-multiple-statements\" doesn't conform to snake_case naming style": {
        "diff": "--- \n+++ \n@@ -1,9 +1,9 @@\n #!/usr/bin/env python3\n \n \"\"\"\n-Stanford Bluescreen Example\n-Shows front and back strategies.\n-The functions are mostly complete,\n+Module name \"C0301-multiple-statements\"\n+Shows front and back strategies for image manipulation.\n+The functions are mostly complete, \n missing only the key if-logic line.\n \"\"\"\n \n@@ -104,13 +104,12 @@\n         image = do_front(args[0], args[1])\n         image.show()\n \n-    if len(args) == 4:\n+    elif len(args) == 4: \n+        # Fix C0301-multiple-statements\n         image = do_back(args[0], int(args[1]), int(args[2]), args[3])\n         image.show()\n \n-    # More than one statement on a single line\n-    if len(args) == 2: image = do_front(args[0], args[1])  # This line triggers C0321\n-\n+    return\n \n if __name__ == '__main__':\n     main()",
        "start_line": 1,
        "end_line": null
    },
    "E1111 - Assigning result of a function call, where the function has no return": {
        "diff": "--- \n+++ \n@@ -1 +1,16 @@\n-    if len(args) == 2: image = do_front(args[0], args[1])  # This line triggers C0321\n+def do_front(*args):\n+    \"\"\"\n+    This function does something with args. It might return None, or it might return an object.\n+    \n+    Parameters:\n+    *args (list): A list of arguments to pass to the function.\n+    \n+    Returns:\n+    image: The result of doing whatever this function does.\n+    \"\"\"\n+    if len(args) == 2:\n+        image = do_front(*args)\n+        # Add a comment here so we know what's going on\n+        return image\n+\n+# Note that I've added a docstring to the do_front function, and also added a comment in the if statement so we know what's happening.",
        "start_line": 112,
        "end_line": 112
    },
    "C0321 - More than one statement on a single line": {
        "diff": "--- \n+++ \n@@ -1 +1,21 @@\n-    if len(args) == 2: image = do_front(args[0], args[1])  # This line triggers C0321\n+\"\"\"\n+This module contains a function for doing front.\n+\n+It takes two arguments: args[0] and args[1].\n+The function do_front() returns something.\n+\"\"\"\n+\n+def do_front(*args):\n+    \"\"\"\n+    This function does something with the given arguments.\n+    \n+    Args:\n+        *args (list): A list of arguments. The first argument is used in the function.\n+        \n+    Returns:\n+        Something\n+    \"\"\"\n+    \n+    # Fix the issue by adding a newline to separate the if statement from the assignment\n+    if len(args) == 2:\n+        image = do_front(args[0], args[1])",
        "start_line": 112,
        "end_line": 112
    }
}